#include <iostream>
using namespace std;


int main() {
	//지금까지 사용한 방식
	// number 라는 이름의 4바이트 정수 타입의 바구니를 만든다.
	// number 라는 변수 스택 메모리에 할당
	// number = 1라 함은, number 바구니에 1이라는 숫자를 넣으라는 의미이다.
	// 따라서 스택 메모리에 있는 특정 주소(number 바구니)에 우리가 원하는 값을 넣은 셈
	// number는 비유하자면 메모리에 이름을 붙인 것 (찰떡 같이 알아들어서 변환해 주는것)
	// 나쁘지 않고 편리한데 단점은 원본 수정이 힘들다.

	int number = 1;
	

	// TYPE* 변수이름
	// TYPE
	// *


	// 포인터 = 주소를 저장하는 바구니
	// 변수를 선언할 때 *이 등장했다. -> 포인터 = 주소
	int* ptr;

	// 메모리의 주소를 알아야지만 값의 변경이나 읽는 것이 가능
	// 

	// &의 주소를 꺼내서 ptr에 대입해주세요
	// 포인터는 32비트 os일시 4바이트, 64비트일스 8바이트 고정이다.
	int* ptr = &number;

	//이 주소가지고 뭘 하라는거임?
	//이 주소에 접근해서 해당 내용을 빼오거나 주소에 접근해서 내용물을 바꾸는 기능이 존재함
	//추가문법이 필요 : [주소를 저장하는 바구니]가 가르키는 주소로 가서 무엇인가를 해라!

	//ptr이라는 바구니가 가르키는 해당 주소를 가져오는 것
	int value1 = *ptr;
	*ptr = 2;
	cout << number;



	return 0;


}